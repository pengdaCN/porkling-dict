import { ComboBox , LineEdit, Button, TextEdit} from "std-widgets.slint";

export TranslateInput := Rectangle {
    callback search(string);
    private property <bool> read_only;

    border-color: black;
    border-width: 1px;
    HorizontalLayout {
        height: 42px;
        ComboBox {
            width: 120px;
            enabled: !root.read_only;
            current-index: 0;
            model: [
                "中英",
                "中法",
                "中日",
                "中韩",
            ];
        }
        input := LineEdit { 
            placeholder-text: "在此输入单词或文本";
            read-only: root.read_only;
        }
        Button { 
            icon: @image_url("../icons/search_button.png");
            enabled: !root.read_only;
            clicked => { 
                root.read_only = true;
                root.search(input.text);
                root.read_only = false;
            }
        }
    }
}

export TranslateEdit := Rectangle {
    TextEdit {  
        
    }
}

export struct SoundData := {
    id: string,
}

Phonetic := Rectangle {
    property <string> ty;
    property <string> dbo;
    property <[SoundData]> sounds;

    callback sound(string);

    height: 20px;
    HorizontalLayout { 
        Text { 
            text: root.ty;
        }

        Text { 
            text: "[" + root.dbo + "]";
        }

        for sound in root.sounds : Rectangle { 
            Image {
                height: 16px;
                width: 16px;
                padding-left: 7px;
                source: @image-url("../icons/speaker-one.png");
            }

            TouchArea { 
                clicked => { 
                    root.sound(sound.id);
                }
            }
        }
    }
}

export struct PhoneticData := {
    ty: string,
    dbo: string,
    sounds: [SoundData],
}

export WordView := Rectangle {
    property <string> word;
    property <[PhoneticData]> phonetics;
    VerticalLayout { 
        HorizontalLayout { 
            Text { 
                text: root.word;
                color: green;
                font-size: 30px;
            }
        }

        HorizontalLayout { 
            padding-top: 6px;

            for phonetic in root.phonetics : Phonetic {
                ty: phonetic.ty;
                dbo: phonetic.dbo;
                sounds: phonetic.sounds;
            }
        }
    }
}
